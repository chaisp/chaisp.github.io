<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/blog/2020/07/25/hello-world/</url>
    <content><![CDATA[<h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><blockquote>
<p>首次使用Hexo的感受还是不错的</p>
</blockquote>
<h3 id="Chapter1-学习计划"><a href="#Chapter1-学习计划" class="headerlink" title="Chapter1 学习计划"></a>Chapter1 学习计划</h3><h3 id="Chapter2-生活计划"><a href="#Chapter2-生活计划" class="headerlink" title="Chapter2 生活计划"></a>Chapter2 生活计划</h3><h3 id="Chapter3-自己以后的发展规划"><a href="#Chapter3-自己以后的发展规划" class="headerlink" title="Chapter3 自己以后的发展规划"></a>Chapter3 自己以后的发展规划</h3><p>暂时能想到的就这么些了</p>
]]></content>
  </entry>
  <entry>
    <title>MarkdownType</title>
    <url>/blog/2020/07/26/MarkdownType/</url>
    <content><![CDATA[<ol>
<li><p>插入代码的方法就是使用 Esc 下方的符号 ``<br> 效果如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.out.println(&quot;this is markdown&quot;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>对于标题的应用,必须在#后面加上空格,不然无法显示<br> 效果如下:</p>
<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3></li>
</ol>
<ol start="3">
<li>对于加粗的字,或者倾斜的字,就不用在符号和文字之间加上空格使用,前面加上**或者***<br> 效果如下:<br> <strong>两个个星是加粗</strong><br> <strong><em>三个星是加粗加倾斜</em></strong></li>
</ol>
<ol start="4">
<li>对于需要引用的文字,使用&gt;<br> 即可,该符号还支持嵌套引用,并且引用内部还可以支持其他符号的应用</li>
</ol>
<ol start="5">
<li><p>对于段落,要保证该项目下的每个段落都有4个空格的缩进,适合写大段的话<br> 效果如下:</p>
<ul>
<li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</li>
</ul>
</li>
<li><p>如果要在列表项目内使用引用,那么就要对&gt;加上缩进<br> 效果如下:</p>
<ul>
<li>阅读的方法:<blockquote>
<p>打开书本。<br>打开电灯。</p>
</blockquote>
</li>
</ul>
</li>
</ol>
<ol start="7">
<li><p>有两种列表,无序列表,每行前面只有黑点,有序列表每行前面是数字<br> 效果如下:<br> -,+,- 都可以表示为无序列表</p>
<ul>
<li>这是无序列表第一行</li>
<li>这是无序列表第二行</li>
<li>这是无序列表第三行</li>
</ul>
</li>
<li><p>数字后加上.和一个空格 就是有序列表</p>
<ol>
<li>这是有序列表第一行    </li>
<li>这是有序列表第二行</li>
<li>这是有序列表第三行</li>
</ol>
</li>
<li><p>使用链接的方法,需要超链接的文字用[]括起来并且后面通过[1]进行标识, 之后使用[1]:url”文字”就可以了<br> 效果如下:<br> 目前的几个学习网站[Github][1]、[Bilibili][2]、[CSDN][3],通过这几个网站的学习,能够有效的提高代码水平<br> [1]: <a href="https://github.com">https://github.com</a> “Github”<br> [2]: <a href="https://www.bilibili.com" target="_blank" rel="noopener">https://www.bilibili.com</a> “Bilibili”<br> [3]: <a href="https://www.csdn.com" target="_blank" rel="noopener">https://www.csdn.com</a> “CSDN”</p>
</li>
</ol>
<ol start="10">
<li>图片的插入就要使用图床来创建,具体的做法与超链接类似使用[]包起来,用标识符标记,最后 通过标识符:url “文字”连接到图床<br>效果如下:<br>快乐学习：<br><img src="https://yanxuan.nosdn.127.net/0a92cb4575418602108d3112aa5a3c14.png" alt="快乐学习" title="快乐学习"></li>
</ol>
<ol start="11">
<li>表格的写法,使用|和-完成<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br></pre></td></tr></table></figure>
效果如下:<table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody><tr>
<td>小明</td>
<td>男</td>
<td>75</td>
</tr>
<tr>
<td>小红</td>
<td>女</td>
<td>79</td>
</tr>
<tr>
<td>小陆</td>
<td>男</td>
<td>92</td>
</tr>
</tbody></table>
</li>
</ol>
<ol start="12">
<li>分隔线,连续三个以上的*,-,或者_都可以,注意行内不可以写其他东西</li>
</ol>
<hr>
<hr>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Swagger 的学习方法</title>
    <url>/blog/2020/07/26/7-26/</url>
    <content><![CDATA[<h1 id="项目集成Swagger"><a href="#项目集成Swagger" class="headerlink" title="项目集成Swagger"></a>项目集成Swagger</h1><p><img src="https://shop.io.mi-img.com/app/shop/img?id=shop_65180179a189e99443f0e93190259be4.png" alt="项目集成" title="项目集成"></p>
<p>学习目标:<br>    - 了解Swagger的概念和应用<br>    - 掌握在项目中集成Swagger自动生成API文档</p>
<h2 id="Swagger简介"><a href="#Swagger简介" class="headerlink" title="Swagger简介"></a>Swagger简介</h2><p><strong>前后端分离</strong><br>    - 前端 -&gt;前端控制层,视图层<br>    - 后端 -&gt;后端控制层,服务处,数据访问层<br>    - 前后端通过API进行交互<br>    - 前后端相对独立且松耦合<br><strong>产生的问题</strong><br>    - 前后端集成,前端或后端无法做到及时协商,尽早解决<br><strong>解决方案</strong><br>    - 首先定义schema[计划提纲],并实施跟踪最新的API,降低集成风险<br><strong>Swagger</strong><br>    - 号称世界上最流行的API框架<br>    - Restful Api文档在线自动生成器=&gt; <strong>API文档与API定义同步更新</strong><br>    - 直接运行,在线测试API<br>    - 支持多种语言<br>    - 官网: <a href="https://swagger.io/" target="_blank" rel="noopener">https://swagger.io/</a></p>
<h2 id="SpringBoot集成Swagger"><a href="#SpringBoot集成Swagger" class="headerlink" title="SpringBoot集成Swagger"></a>SpringBoot集成Swagger</h2><p>   SpringBoot集成Swagger=&gt;springfox,两个jar包</p>
<ul>
<li>Springfox-swagger2</li>
<li>swagger-springmvc</li>
</ul>
<p>   <strong>使用Swagger</strong><br>   要求:JDK 1.8+ 否则swagger2无法运行<br>   步骤:</p>
<ol>
<li>新建一个SpringBoot-web项目</li>
<li>添加Maven依赖<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;io.springfox&#x2F;springfox-swagger2 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;2.9.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;io.springfox&#x2F;springfox-swagger-ui --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;2.9.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure></li>
<li>编写HelloController,测试确保运行成功</li>
<li>要使用Swagger,我们要编写一个配置类SwaggerConfig来配置swagger<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  @Configuration &#x2F;&#x2F;配置类</span><br><span class="line">@EnableSwagger2&#x2F;&#x2F; 开启Swagger2的自动配置</span><br><span class="line">public class SwaggerConfig &#123;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>访问测试: <a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a> ，可以看到swagger的界面；<br><img src="https://shop.io.mi-img.com/app/shop/img?id=shop_893f7fa73cfa50a6353fc2c9bb520f6f.png" alt="测试图片" title="访问测试"></li>
</ol>
<h1 id="以上内容都是狂神说SpringBoot的内容-使用MD重新自己写了一遍-原文地址-狂神说"><a href="#以上内容都是狂神说SpringBoot的内容-使用MD重新自己写了一遍-原文地址-狂神说" class="headerlink" title="以上内容都是狂神说SpringBoot的内容,使用MD重新自己写了一遍,原文地址:狂神说"></a>以上内容都是狂神说SpringBoot的内容,使用MD重新自己写了一遍,原文地址:<a href="https://mp.weixin.qq.com/s/0-c0MAgtyOeKx6qzmdUG0w" target="_blank" rel="noopener" title="狂神说">狂神说</a></h1>]]></content>
  </entry>
</search>
